{
  //  _____    _ _ _
  // | ____|__| (_) |_ ___  _ __
  // |  _| / _` | | __/ _ \| '__|
  // | |__| (_| | | || (_) | |
  // |_____\__,_|_|\__\___/|_|

  // Show whitespace differences.
  "diffEditor.ignoreTrimWhitespace": false,
  // Wrap long lines around.
  "editor.wordWrap": "on",
  // Let the terminal receive Alt and Ctrl shortcuts.
  "terminal.integrated.allowMnemonics": true,
  // May need one of the symbol-patched nerd fonts.
  "terminal.integrated.gpuAcceleration": "on",
  // Make matching bracket pairs the same color.
  "editor.bracketPairColorization.enabled": true,
  // A symbol-patched nerd font. Otherwise symbols will not render.
  "editor.fontFamily": "'MesloLGS NF', 'monospace', monospace",
  // Show leading and trailing spaces and tabs.
  "editor.renderWhitespace": "boundary",
  // Do not show the menu bar when pressing alt.
  "window.customMenuBarAltFocus": false,
  // Do not show menu bar when pressing alt-f, alt-e, alt-s, etc.
  "window.enableMenuBarMnemonics": false,
  // Do not show menu bar at startup.
  "window.menuBarVisibility": "hidden",
  // File extension associations.
  "workbench.editorAssociations": {
    "*.drawio.png": "hediet.vscode-drawio",
    "*.drawio.svg": "hediet.vscode-drawio"
  },
  // Do not search text in these directories.
  "search.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CSV": true,
    "**/.DS_Store": true,
    "**/Thumbs.db": true,
    "**/.ccls-cache": true
  },
  // Formatter for each file type.
  "[cpp]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "code-runner.saveFileBeforeRun": true,
  "[javascript]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  //  ____  _             _
  // |  _ \| |_   _  __ _(_)_ __  ___
  // | |_) | | | | |/ _` | | '_ \/ __|
  // |  __/| | |_| | (_| | | | | \__ \
  // |_|   |_|\__,_|\__, |_|_| |_|___/
  //                |___/

  //  Open pdf previews on a tab.
  "latex-workshop.view.pdf.viewer": "tab",
  // Clean LaTeX files when the build process is complete.
  "latex-workshop.latex.autoClean.run": "onBuilt",
  // Intellisense should show the following items when hovering on a citation.
  "latex-workshop.intellisense.citation.format": [
    "author",
    "title",
    "journal",
    "publisher",
    "booktitle",
    "year",
    "date",
    "urldate",
    "url"
  ],

  // Base folder for searching Git projects.
  "projectManager.git.baseFolders": [
    "/home/luis/Code/",
  ],

  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.codeLens.enabled": false,
  "gitlens.statusBar.enabled": false,
  "gitlens.defaultDateStyle": "absolute",

  // // CCLS path to headers. The include commands should match the Makefile.
  // "ccls.clang.extraArgs": [
  //     "-Ishared",
  //     "-Iengine",
  //     "-I/usr/X11R6/include",
  //     "`sdl2-config --cflags`"
  // ],

  // __     ___
  // \ \   / (_)_ __ ___
  //  \ \ / /| | '_ ` _ \
  //   \ V / | | | | | | |
  //    \_/  |_|_| |_| |_|
  // Set the leader key.
  "vim.leader": " ",
  // Set to true fro copy and paste to work seamlessly.
  "vim.useSystemClipboard": true,
  // Set Neovim as the backend.
  "vim.enableNeovim": true,
  // Let VSCode handle these keybinding.
  "vim.handleKeys": {
    "<C-a>": false, // Select all.
    "<C-f>": false, // Search.
    "<C-h>": false, // Search and replace.
    "<C-H>": false // Global search and replace.
  },
  // Remap keys in normal mode.
  "vim.normalModeKeyBindings": [
    {
      // Show open buffers.
      "before": [";"],
      "commands": ["workbench.action.showEditorsInActiveGroup"],
      "silent": true
    },
    {
      // Indent lines.
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      // Outdent lines.
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    }
  ],
  // Remap keys in normal mode non-recursively.
  "vim.normalModeKeyBindingsNonRecursive": [
    {
        // Go to previous editor (tab).
        "before": ["L"],
        "commands": ["workbench.action.nextEditor"]
    },
    {
        // Go to previous editor (tab).
        "before": ["H"],
        "commands": ["workbench.action.previousEditor"]
    },
    {
      // Show hover options.
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      // Split down.
      "before": ["<leader>", "s", "j"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      // Split up.
      "before": ["<leader>", "s", "k"],
      "commands": ["workbench.action.splitEditorUp"]
    },
    {
      // Split left.
      "before": ["<leader>", "s", "h"],
      "commands": ["workbench.action.splitEditorLeft"]
    },
    {
      // Split right.
      "before": ["<leader>", "s", "l"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    {
      // Toggle wordwrap.
      "before": ["<leader>", "t", "w"],
      "commands": ["editor.action.toggleWordWrap"]
    },
    {
      // Move to the editor to the left.
      "before": ["<leader>", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      // Move to the editor below.
      "before": ["<leader>", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      // Move to the editor above.
      "before": ["<leader>", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      // Move to the editor to the right.
      "before": ["<leader>", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    {
      // Open current file in file explorer.
      "before": ["<leader>", "o"],
      "commands": ["revealFileInOS"]
    },
    {
      // Show pallete.
      "before": ["<leader>", "<leader>"],
      "commands": ["workbench.action.showCommands"],
      "silent": true
    },
    {
      // Close buffer.
      "before": ["<leader>", "q"],
      "commands": ["workbench.action.closeActiveEditor"],
      "silent": true
    },
    {
      // Close buffer.
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.files.save"],
      "silent": true
    },
    {
      // Open recent.
      "before": ["<leader>", "r"],
      "commands": ["workbench.action.openRecent"],
      "silent": true
    },
    {
      // Open file explorer.
      "before": ["<leader>", "e"],
      "commands": ["workbench.view.explorer"],
      "silent": true
    },
    {
      // Search files by name.
      "before": ["<leader>", "f"],
      "commands": ["workbench.action.quickOpen"],
      "silent": true
    },
    {
      // Open search in sidebar.
      "before": ["<leader>", "s"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      // Open Git in sidebar.
      "before": ["<leader>", "g"],
      "commands": ["workbench.view.scm"]
    },
    {
      // Open Git in sidebar.
      "before": ["<leader>", "p"],
      "commands": ["projectManager.listProjects"]
    }
  ],
}
