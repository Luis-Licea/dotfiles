// Place your key bindings in this file to override the defaultsauto[]
[
    {
        // Go to the terminal when it is visible.
        "key": "cmd+j",
        "command": "terminal.focus",
        // "when": "view.terminal.visible"
        "when": "terminalViewShowing"
    },
    {
        // Leave terminal when it is focused.
        "key": "cmd+k",
        "command": "workbench.action.focusPreviousPart",
        "when": "terminalFocus"
    },
    {
        // Go to the next buffer.
        "key": "cmd+l",
        "command": "workbench.action.nextEditor"
    },
    {
        // Leave sidebar when it is focused.
        "key": "cmd+l",
        "command": "workbench.action.focusNextPart",
        "when": "sideBarFocus"
    },
    {
        // Go to the previous buffer.
        "key": "cmd+h",
        "command": "workbench.action.previousEditor"
    },
    {
        // Leave sidebar when it is focused.
        "key": "cmd+h",
        "command": "workbench.action.focusNextPart",
        "when": "sideBarFocus"
    },
    {
        // Close buffer.
        "key": "cmd+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        // Show open buffers in palette.
        "key": "cmd+o",
        "command": "workbench.action.showEditorsInActiveGroup",
        // "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        // When using autocomplete, use to move down the list.
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        // When using autocomplete, use to move up the list.
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        // When the palette is open, use to move down the list.
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        // When the palette is open, use to move up the list.
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        // Toggle sidebar.
        "key": "cmd+s",
        "command": "workbench.action.toggleSidebarVisibility",

        // Use ctrl+0 repeatedly to close sidebar.
        // "key": "ctrl+0",
        // "command": "workbench.action.toggleSidebarVisibility",
        // "when": "!editorTextFocus"
    },
    {
        // Close sidebar when it is focused.
        "key": "cmd+w",
        "command": "workbench.action.closeSidebar",
        "when": "!editorTextFocus && sideBarFocus"
    },
    {
        // Collapse all folders in sidebar using H.
        "key": "shift+h",
        "command": "workbench.files.action.collapseExplorerFolders",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        // Rename file in sidebar explorer using r.
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        // Delete file in sidebar explorer using x.
        "key": "x",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        // Toggle terminal.
        "key": "cmd+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        // Remove Go to File keybinding because it conflicts with Gitui.
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        // Create new folder in sidebar explorer.
        "key": "f",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        // Create new file in sidebar explorer.
        "key": "n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        // Format document.
        "key": "cmd+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        // Disable because it conflicts with Neovim.
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen",
    },
    {
        // Disable because it conflicts with Neovim.
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
    },
]