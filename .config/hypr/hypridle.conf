# ##############################################
# Configuration                                #
# ##############################################
# general {
#     lock_cmd = notify-send "lock!"           # dbus/sysd lock command (loginctl lock-session)
#     unlock_cmd = notify-send "unlock!"       # same as above, but unlock
#     before_sleep_cmd = notify-send "Zzz"     # command ran before sleep
#     after_sleep_cmd = notify-send "Awake!"   # command ran after sleep
#     ignore_dbus_inhibit = false              # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
#     ignore_systemd_inhibit = false           # whether to ignore systemd-inhibit --what=idle inhibitors
# }
#
# listener {
#     timeout = 500                            # in seconds
#     on-timeout = notify-send "You are idle!" # command to run when timeout has passed
#     on-resume = notify-send "Welcome back!"  # command to run when activity is detected after timeout has fired.
# }
# ##############################################

general {
    lock_cmd = pidof hyprlock || hyprlock       # avoid starting multiple hyprlock instances.
    before_sleep_cmd = hyprctl keyword input:kb_layout us && loginctl lock-session # Set US keyboard and lock before suspend.
    after_sleep_cmd = hyprctl dispatch dpms on  # to avoid having to press a key twice to turn on the display.
}

listener {
    timeout = 1800                                # 30 mins
    on-timeout = loginctl lock-session            # lock screen when timeout has passed
}

listener {
    timeout = 1900                                # 30 mins + d
    on-timeout = hyprctl dispatch dpms off        # screen off when timeout has passed
    on-resume = hyprctl dispatch dpms on          # screen on when activity is detected after timeout has fired.
}

listener {
    timeout = 3600                                # 1hr
    on-timeout = systemctl suspend                # suspend pc
}

