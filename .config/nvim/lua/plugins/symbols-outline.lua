-- Tagbar for class and function outlines.
return {
    'simrat39/symbols-outline.nvim',
    config = function()
        local symbols_outline = require("symbols-outline")
        vim.keymap.set('n', '<leader>ta', symbols_outline.toggle_outline)
        symbols_outline.setup({})
    end,
    -- config = function()
    --     local opts = {
    --         -- highlight_hovered_item = true,
    --         -- show_guides = true,
    --         -- auto_preview = false,
    --         -- position = 'right',
    --         -- relative_width = true,
    --         -- width = 25,
    --         auto_close = true,
    --         -- show_numbers = false,
    --         -- show_relative_numbers = false,
    --         -- show_symbol_details = true,
    --         -- preview_bg_highlight = 'Pmenu',
    --         -- autofold_depth = nil,
    --         -- auto_unfold_hover = true,
    --         -- wrap = false,
    --         -- keymaps = { -- These keymaps can be a string or a table for multiple keys
    --         -- close = {"<Esc>", "q"},
    --         -- goto_location = "<Cr>",
    --         -- focus_location = "o",
    --         -- hover_symbol = "<C-space>",
    --         -- toggle_preview = "K",
    --         -- rename_symbol = "r",
    --         -- code_actions = "a",
    --         -- fold = "h",
    --         -- unfold = "l",
    --         -- fold_all = "W",
    --         -- unfold_all = "E",
    --         -- fold_reset = "R",
    --         -- },
    --         -- lsp_blacklist = {},
    --         symbol_blacklist = {
    --             -- 'File',
    --             -- 'Module',
    --             -- 'Namespace',
    --             -- 'Package',
    --             -- 'Class',
    --             -- 'Method',
    --
    --             -- 'Property',
    --             -- 'Field',
    --             -- 'Constructor',
    --
    --             'Enum',
    --             -- 'Interface',
    --             -- 'Function',
    --
    --             'Variable',
    --             'Constant',
    --             -- 'String',
    --             'Number',
    --             'Boolean',
    --             -- 'Array',
    --             'Object',
    --             -- 'Key',
    --             -- 'Null',
    --             'EnumMember',
    --             -- 'Struct',
    --             -- 'Event',
    --             -- 'Operator',
    --             -- 'TypeParameter',
    --             -- 'Component',
    --             -- 'Fragment',
    --         },
    --         -- symbols = {
    --         -- File = {icon = "Ôúì", hl = "TSURI"},
    --         -- Module = {icon = "Ôö¶", hl = "TSNamespace"},
    --         -- Namespace = {icon = "Ôô©", hl = "TSNamespace"},
    --         -- Package = {icon = "Ô£ñ", hl = "TSNamespace"},
    --         -- Class = {icon = "ùìí", hl = "TSType"},
    --         -- Method = {icon = "∆í", hl = "TSMethod"},
    --         -- Property = {icon = "Óò§", hl = "TSMethod"},
    --         -- Field = {icon = "Ôöß", hl = "TSField"},
    --         -- Constructor = {icon = "Óàè", hl = "TSConstructor"},
    --         -- Enum = {icon = "‚Ñ∞", hl = "TSType"},
    --         -- Interface = {icon = "Ô∞Æ", hl = "TSType"},
    --         -- Function = {icon = "ÔÇö", hl = "TSFunction"},
    --         -- Variable = {icon = "Óûõ", hl = "TSConstant"},
    --         -- Constant = {icon = "Óà¨", hl = "TSConstant"},
    --         -- String = {icon = "ùìê", hl = "TSString"},
    --         -- Number = {icon = "#", hl = "TSNumber"},
    --         -- Boolean = {icon = "‚ä®", hl = "TSBoolean"},
    --         -- Array = {icon = "Ôô©", hl = "TSConstant"},
    --         -- Object = {icon = "‚¶ø", hl = "TSType"},
    --         -- Key = {icon = "üîê", hl = "TSType"},
    --         -- Null = {icon = "NULL", hl = "TSType"},
    --         -- EnumMember = {icon = "ÔÖù", hl = "TSField"},
    --         -- Struct = {icon = "ùì¢", hl = "TSType"},
    --         -- Event = {icon = "üó≤", hl = "TSType"},
    --         -- Operator = {icon = "+", hl = "TSOperator"},
    --         -- TypeParameter = {icon = "ùôè", hl = "TSParameter"}
    --         -- }
    --     }
    --
    --     require('symbols-outline').setup(opts)
    -- end
}
