#!/usr/bin/env bash

################################################################################
# MIT License
#
# Copyright (c) 2023 Luis David Licea Torres
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
################################################################################

# Define a place to store the player name. Playerctl can only control one
# player at a time, so this file will store the name of the player to control.
player_file=/tmp/playerctl.txt

# Pick the player that playerctl will control.
pick_player() {
    # Choose a player from the list.
    player=$( playerctl -l | rofi -dmenu -i )

    # Save the player program's name, such as vlc, mpd, mpv, etc.
    test "$player" != "" && echo "$player" > "$player_file"

    # Exit script after picking the player.
    exit
}

# If no arguments are passed then pick a music player to control.
test "$#" -eq 0 && pick_player

# If a player has been picked:
# Retrieve player name from file.
# Else, leave player name empty. Playerctl can handle it.
test -f "$player_file" && player=$(cat "$player_file") || player=''

# Execute the arguments on the specified player.
playerctl --player="$player" "$@"

